head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df <- super_bowl_df |>
mutate(Winner_score = as.numeric(str_extract(Winner, pattern)),
Loser_Score = as.numeric(str_extract(Loser, pattern))
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df <- super_bowl_df |>
mutate(Winner_score = as.numeric(str_extract(Winner, pattern)),
Loser_Score = as.numeric(str_extract(Loser, pattern)))
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df <- super_bowl_df |>
mutate(Winner_score = as.numeric(str_extract(Winner, pattern)),
Loser_Score = as.numeric(str_extract(Loser, pattern)),
Winner = gsub(pattern, "", Winner),
Loser = gsub(pattern, "", Loser))
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern)))
pattern <- " //d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
pattern <- " //d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
super_bowl_df$Loser_score <- as.numeric(str_extract(super_bowl_df$Loser, pattern))
super_bowl_df$Winner <- gsub(pattern, "", super_bowl_df$Winner)
head(super_bowl_df)
pattern <- " //d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
super_bowl_df$Loser_score <- as.numeric(str_extract(super_bowl_df$Loser, pattern))
super_bowl_df$Winner <- gsub(pattern, "", super_bowl_df$Winner)
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " /d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
super_bowl_df$Loser_score <- as.numeric(str_extract(super_bowl_df$Loser, pattern))
super_bowl_df$Winner <- gsub(pattern, "", super_bowl_df$Winner)
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern <- " ///d+$"
super_bowl_df$Winner_score <- as.numeric(str_extract(super_bowl_df$Winner, pattern))
super_bowl_df$Loser_score <- as.numeric(str_extract(super_bowl_df$Loser, pattern))
super_bowl_df$Winner <- gsub(pattern, "", super_bowl_df$Winner)
head(super_bowl_df)
super_bowl_df <- super_bowl_df |>
separate("Winner", into = c("Winner", "Winner_Score"), sep = " ")
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
super_bowl_df <- super_bowl_df |>
separate("Winner", into = c("Winner", "Winner_Score"), sep = " ")
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern = " //d+$"
super_bowl_df <- super_bowl_df |>
separate("Winner", into = c("Winner", "Winner_Score"), sep = pattern)
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern = " \\d+$"
super_bowl_df <- super_bowl_df |>
separate("Winner", into = c("Winner", "Winner_Score"), sep = pattern)
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern = " \\d+$"
super_bowl_df <- super_bowl_df |>
mutate(`Winner Score` = str_extract(Winner, pattern) |>
`Loser Score` = str_extract(Loser, pattern))
pattern = " \\d+$"
super_bowl_df <- super_bowl_df |>
mutate(`Winner Score` = str_extract(Winner, pattern), |>
pattern = " \\d+$"
super_bowl_df <- super_bowl_df |>
mutate(`Winner Score` = str_extract(Winner, pattern),
`Loser Score` = str_extract(Loser, pattern))
head(super_bowl_df)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
super_bowl_df$`Super Bowl` <- roman2int(super_bowl_df$`Super Bowl`)
super_bowl_df <- super_bowl_df %>%
separate("Results", into = c("Winner", "Loser"), sep = ",")
head(super_bowl_df)
pattern = " \\d+$"
# super_bowl_df <- super_bowl_df |>
#   mutate(`Winner Score` = as.numeric(str_extract(Winner, pattern)),
#            `Loser Score` = as.numeric(str_extract(Loser, pattern)))
super_bowl_df <- super_bowl_df |>
mutate(`Winner` = as.numeric(stri_replace_first(Winner,pattern,"\\1")),
`Winner_Score = as.numeric(stri_match_captures(Winner, pattern)[[1]][1]))
head(super_bowl_df)
pattern = " \\d+$"
# super_bowl_df <- super_bowl_df |>
#   mutate(`Winner Score` = as.numeric(str_extract(Winner, pattern)),
#            `Loser Score` = as.numeric(str_extract(Loser, pattern)))
super_bowl_df <- super_bowl_df |>
mutate(`Winner` = stri_replace_first(Winner,pattern,"\\1"),
`Winner Score` = stri_match_captures(Winner, pattern)[[1]][1])
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
library(stringi)
pattern = " \\d+$"
# super_bowl_df <- super_bowl_df |>
#   mutate(`Winner Score` = as.numeric(str_extract(Winner, pattern)),
#            `Loser Score` = as.numeric(str_extract(Loser, pattern)))
super_bowl_df <- super_bowl_df |>
mutate(`Winner` = stri_replace_first(Winner,pattern,"\\1"),
`Winner Score` = stri_match_captures(Winner, pattern)[[1]][1])
pattern = " \\d+$"
# super_bowl_df <- super_bowl_df |>
#   mutate(`Winner Score` = as.numeric(str_extract(Winner, pattern)),
#            `Loser Score` = as.numeric(str_extract(Loser, pattern)))
super_bowl_df <- super_bowl_df |>
mutate(`Winner` = stri_replace_first_regex(Winner,pattern,"\\1"),
`Winner Score` = stri_match_captures(Winner, pattern)[[1]][1])
pattern = " \\d+$"
super_bowl_df <- super_bowl_df %>%
mutate(Winner = str_trim(Winner),
Loser = str_trim(Loser),
Winner_Score = as.numeric(stri_extract_last_regex(Winner, pattern)),
Loser_Score = as.numeric(stri_extract_last_regex(Loser, pattern)),
Winner = stri_replace_last_regex(Winner, pattern, ""),
Loser = stri_replace_last_regex(Loser, pattern, ""))
head(super_bowl_df)
View(super_bowl_df)
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- GET(url)
library(httr2)
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- GET(url)
library(httr2)
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- GET(url)
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- request(url)
req
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- request(url)
req
r <- GET("http://httpbin.org/get", add_headers(Name = "Rashad"))
# jsonlite
library(jsonlite)
r <- request("http://httpbin.org/get", add_headers(Name = "Rashad"))
library(httr)
r <- get("http://httpbin.org/get", add_headers(Name = "Rashad"))
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- request(url)
req
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI?secret=fgJrrAnsjKSAdutZ"
req <- request(url)
req
url <- "https://api.nytimes.com/svc/archive/v1/1984/1.json?api-key=98dNOjWwYUCUAKc01TAz5gGQg7DtLirI"
req <- request(url)
req
list_names <- "https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
list_names <- fromJSON(list_names)
list_names <- list_names$results
list_names <- "https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
list_names <- fromJSON(list_names)
list_names
View(list_names)
list_names <- list_names$results
View(list_names)
str(list_names)
glimpse(list_names)
science_best_sellers <- "https://api.nytimes.com/svc/books/v3/lists.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
science_best_sellers <- fromJSON(science_best_sellers)
science_best_sellers <- "https://api.nytimes.com/svc/books/v3/lists.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
science_best_sellers <- fromJSON(science_best_sellers)
science_best_sellers <- "https://api.nytimes.com/svc/books/v3/lists/current/science.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
science_best_sellers <- fromJSON(science_best_sellers)
glimpse(science_best_sellers)
View(science_best_sellers)
science_best_sellers <- science_best_sellers$results
science_best_sellers <- "https://api.nytimes.com/svc/books/v3/lists/current/science.json?api-key=DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
science_best_sellers <- fromJSON(science_best_sellers)
science_best_sellers$results
science_best_sellers$results[2]
science_best_sellers$results
maybe_clean <- science_best_sellers$results
glimpse(maybe_clean)
View(maybe_clean)
str(maybe_clean)
maybe_clean <- maybe_clean$books
View(list_names)
library(httr2)
library(jsonlite)
api_key <- "DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
# Get the book list names from the New York Times API
category_names_url<-"https://api.nytimes.com/svc/books/v3/lists/names.json?api-key"+api_key
# Get the book list names from the New York Times API
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key",api_key)
category_names <- fromJSON(category_names_url)
# Get the book list names from the New York Times API
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key",api_key, sep = "")
category_names <- fromJSON(category_names_url)
# Get the book list names from the New York Times API
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json.json?api-key=",api_key, sep = "")
category_names <- fromJSON(category_names_url)
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json.json?api-key=",api_key, sep = "")
category_names_url
# Get the book list names from the New York Times API
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=",api_key, sep = "")
category_names_url
category_names <- fromJSON(category_names_url)
category_names
category_names$list_name
category_names$list_names
category_names$l
category_names
category_names$list_name
category_names
category_names$results
category_names <- category_names$results
# Get the book list names from the New York Times API using api_key
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=",api_key, sep = "")
category_names <- fromJSON(category_names_url)
category_names <- category_names$results
category_names <- category_names$list_name
category_names
# Get the book list names from the New York Times API using api_key
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=",api_key, sep = "")
# Get the category names from the New York Times API JSON
category_names <- fromJSON(category_names_url)
# Extract the list name from the JSON
category_names <- category_names$results
# Extract the category names from the list name column
category_names <- c(category_names$list_name,category_names$list_name_encoded)
# Display the category names
category_names
# Get the book list names from the New York Times API using api_key
category_names_url<-paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=",api_key, sep = "")
# Get the category names from the New York Times API JSON
category_names <- fromJSON(category_names_url)
# Extract the list name from the JSON
category_names <- category_names$results
# Extract the category names from the list name column
category_names <- category_names$list_name_encoded
# Display the category names
category_names
# Get the current New York Times Best Sellers List for the 'Combined Print & E-Book Fiction' category
best_sellers_url <- paste("https://api.nytimes.com/svc/books/v3/lists/current/combined-print-and-e-book-fiction.json?api-key=",api_key, sep = "")
# Get the current New York Times Best Sellers List for the 'Combined Print & E-Book Fiction' category JSON
best_sellers <- fromJSON(best_sellers_url)
# Extract the best sellers list from the JSON
best_sellers <- best_sellers$results
best_sellers <- best_sellers$books
best_sellers
best_sellers_df <- data.frame(Title = character(), Author = character(), Description = character(), Rank = numeric(), ISBN = character(), stringsAsFactors = FALSE)
best_sellers_df
for (i in 1:length(best_sellers)){
best_sellers_df[i, "Title"] <- best_sellers[[i]]$title
best_sellers_df[i, "Author"] <- best_sellers[[i]]$author
best_sellers_df[i, "Description"] <- best_sellers[[i]]$description
best_sellers_df[i, "Rank"] <- best_sellers[[i]]$rank
best_sellers_df[i, "ISBN"] <- best_sellers[[i]]$primary_isbn13
}
best_sellers
for (i in 1:length(best_sellers)){
best_sellers_df[i, "Title"] <- best_sellers[i]$title
best_sellers_df[i, "Author"] <- best_sellers[i]$author
best_sellers_df[i, "Description"] <- best_sellers[i]$description
best_sellers_df[i, "Rank"] <- best_sellers[i]$rank
best_sellers_df[i, "ISBN"] <- best_sellers[i]$primary_isbn13
}
for (i in 1:length(best_sellers)){
best_sellers_df[i, "Title"] <- best_sellers[[i]]$title
best_sellers_df[i, "Author"] <- best_sellers[[i]]$author
best_sellers_df[i, "Description"] <- best_sellers[[i]]$description
best_sellers_df[i, "Rank"] <- best_sellers[[i]]$rank
best_sellers_df[i, "ISBN"] <- best_sellers[[i]]$primary_isbn13
}
for (i in 1:length(best_sellers)){
best_sellers_df[i, "Title"] <- best_sellers[[i]]["title"]
best_sellers_df[i, "Author"] <- best_sellers[[i]]["author"]
best_sellers_df[i, "Description"] <- best_sellers[[i]]["description"]
best_sellers_df[i, "Rank"] <- best_sellers[[i]]["rank"]
best_sellers_df[i, "ISBN"] <- best_sellers[[i]]["primary_isbn13"]
}
best_sellers
for (i in 1:length(best_sellers)){
best_sellers_df[i, "Title"] <- best_sellers[[i]]["title"]
best_sellers_df[i, "Author"] <- best_sellers[[i]]["author"]
best_sellers_df[i, "Description"] <- best_sellers[[i]]["description"]
best_sellers_df[i, "Rank"] <- best_sellers[[i]]["rank"]
best_sellers_df[i, "ISBN"] <- best_sellers[[i]]["primary_isbn13"]
}
# show best sellers list with just title and description columns
best_sellers_df <- data.frame(title = sapply(best_sellers, function(x) x$title), description = sapply(best_sellers, function(x) x$description))
best_sellers_df <- data.frame(title = sapply(best_sellers, function(x) x["title"]), description = sapply(best_sellers, function(x) x["description"]))
library(httr2)
library(jsonlite)
library(dplyr)
best_sellers <- best_sellers |>
select(rank, title, author, description, primary_isbn13)
best_sellers
type(best_sellers)
#what kind of object is best_sellers
class(best_sellers)
# Display the category names
category_names <- as_tibble(category_names)
category_names
#| warning: FALSE
library(httr2)
library(jsonlite)
library(dplyr)
#| echo: False
api_key <- "DmmA4yncJS7ykyBcQGGtM5KxP4AYnaWa"
# Get the book list names from the New York Times API using api_key
category_names_url <-
paste("https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=",
api_key,
sep = "")
# Get the category names from the New York Times API JSON
category_names <- fromJSON(category_names_url)
# Extract the list name from the JSON
category_names <- category_names$results
# Extract the category names from the list name column
category_names <- category_names$list_name_encoded
# Display the category names
category_names
# Get the current New York Times Best Sellers List for the 'Combined Print & E-Book Fiction' category
best_sellers_url <-
paste(
"https://api.nytimes.com/svc/books/v3/lists/current/combined-print-and-e-book-fiction.json?api-key=",
api_key,
sep = ""
)
# Get the current New York Times Best Sellers List for the 'Combined Print & E-Book Fiction' category JSON
best_sellers <- fromJSON(best_sellers_url)
# Extract the best sellers list from the JSON
best_sellers <- best_sellers$results
best_sellers <- best_sellers$books
# I only need the rank, title, author, description and primary_ISBN13 columns
best_sellers <- best_sellers |>
select(rank, title, author, description, primary_isbn13)
# Display the best sellers list
best_sellers
# Confirm the data type of best_sellers
class(best_sellers)
setwd("~/Education/CUNY School of Professional Stuides/DATA 607/DATA607-Spring2024/Assignments")
