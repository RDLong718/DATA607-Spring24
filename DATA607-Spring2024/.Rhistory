arrange(desc(total)
)
skills <-
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# make a new data frame with the top 5 skill names and the count of each skill
top5_skills <- data.frame(skill = skill_names, count = colSums(linkedin_clean[5:ncol(linkedin_clean)])) |>
arrange(desc(count)) |>
head(5)
# Fix the names of the top 5 skills
proper_names <- c("Programming","Stats","Machine Learning","Visualization","Cloud Computing")
top5_skills$skill[1:5] <- proper_names
top5_skills
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.4, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, count),
y = count,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.4, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
skills_plot <- function(x, width = 3) {
ggplot(skills, aes(
x = reorder(skill, count),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.4, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
skills_plot <- function(x, width = 3) {
ggplot(skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# Make a new data frame with the total number of times each skill is mentioned
skills <- linkedin_clean %>%
select(skill_names) %>%
summarise_all(sum) %>%
gather(skill, total) %>%
arrange(desc(total)) %>%
head(5)
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# Make a new data frame with the total number of times each skill is mentioned (Top 5)
skills <- linkedin_clean %>%
select(skill_names) %>%
summarise_all(sum) %>%
gather(skill, total) %>%
arrange(desc(total)) %>%
head(5)
skills
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# Make a new data frame with the total number of times each skill is mentioned top 5
skills <- linkedin_clean |>
select(skill_names) |>
summarise_all(sum) |>
gather(skill, total) |>
arrange(desc(total)) |>
head(5)
skills
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# Make a new data frame with the total number of times each skill is mentioned top 5
top5_skills <- linkedin_clean |>
select(skill_names) |>
summarise_all(sum) |>
gather(skill, total) |>
arrange(desc(total)) |>
head(5)
top5_skills
rm(skills)
rm(proper_names)
#remove all from environment
rm(list=ls())
knitr::opts_chunk$set(eval = TRUE, message = FALSE, warning = FALSE)
library(readr)
library(dplyr)
library(tidyverse)
library(knitr)
library(magick)
library(here) # For making the script run without a wd
library(magrittr) # For piping the logo to the plot
library(gtable)
library(png)
#grid linrary
library(grid)
library(RColorBrewer)
Postings_url <- 'https://media.githubusercontent.com/media/RDLong718/data607-project3/main/Data/job_postings.csv'
Postings_raw <- readr::read_csv(Postings_url)
Salries_url <- 'https://media.githubusercontent.com/media/RDLong718/data607-project3/main/Data/job_details/salaries.csv'
Salaries_raw <- readr::read_csv(Salries_url)
linkedin_postings <- Postings_raw[c('job_id', 'title', 'description')]
linkedin_salaries <- Postings_raw[c('job_id', 'max_salary', 'min_salary', 'med_salary', 'pay_period')]
linkedin_salaries$med_salary <- (linkedin_salaries$max_salary + linkedin_salaries$min_salary)/2
linkedin_salaries$med_salary[linkedin_salaries$pay_period == 'HOURLY' & !is.na(linkedin_salaries$pay_period)] <- linkedin_salaries$med_salary[linkedin_salaries$pay_period == 'HOURLY' & !is.na(linkedin_salaries$pay_period)] * 40 * 52
linkedin_salaries$med_salary[linkedin_salaries$med_salary < 1000 & !is.na(linkedin_salaries$med_salary)] <- linkedin_salaries$med_salary[linkedin_salaries$med_salary < 1000] * 1000
salaries_clean <- linkedin_salaries[c('job_id', 'med_salary')]
#top_5 <- head(salaries_clean, 5)
#kable(top_5)
data_science_postings <- linkedin_postings[grepl("data science|data scientist", linkedin_postings$title, ignore.case = TRUE), ]
linkedin_clean <- merge(data_science_postings, salaries_clean, by = 'job_id', all.x=TRUE)
linkedin_clean$med_salary[is.na(linkedin_clean$med_salary)] <- median(linkedin_clean$med_salary, na.rm=TRUE)
#top_5 <- head(linkedin_clean, 5)
#kable(top_5)
linkedin_clean$Programming <- ifelse(grepl('python| r | r/|/r/|/r|\\(r,| r,| r.|c\\+\\+|sql', linkedin_clean$description, ignore.case = TRUE), 1,0)
linkedin_clean$Machine_Learning <- ifelse(grepl('machine learning| ml|algorithms|scikit learn|transformers|language model', linkedin_clean$description, ignore.case = TRUE), 1,0)
linkedin_clean$Stats <- ifelse(grepl('data analysis|data analytics|statistical analysis|data-driven analysis', linkedin_clean$description, ignore.case = TRUE), 1,0)
linkedin_clean$cloud_computing <- ifelse(grepl('cloud computing| aws|\\(aws|/aws|amazon web|google cloud', linkedin_clean$description, ignore.case = TRUE), 1,0)
linkedin_clean$visualization <- ifelse(grepl('visualization|presentation', linkedin_clean$description, ignore.case = TRUE), 1,0)
linkedin_clean$collaberation <- ifelse(grepl('team work|with a team|collaberat|scrum team|agile team', linkedin_clean$description, ignore.case = TRUE), 1,0)
# make a vector of the column skill names in linkedin_clean
skill_names <- colnames(linkedin_clean)[5:ncol(linkedin_clean)]
# Make a new data frame with the total number of times each skill is mentioned top 5
top5_skills <- linkedin_clean |>
select(skill_names) |>
summarise_all(sum) |>
gather(skill, total) |>
arrange(desc(total)) |>
head(5)
top5_skills
# Download PNG files of the LinkedIn logo
download.file(
"https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/LinkedIn_logo_initials.png/900px-LinkedIn_logo_initials.png",
mode = "wb",
destfile = here("linkedin_logo.png")
)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.4, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.3, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.35, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.32, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.31, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
# Position the logo via rasterGrob.
get_png <- function(filename, x = unit(0.5, "npc"), y= unit(0.5, "npc"),
width = NULL, height = NULL, gp = grid::gpar()) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE,
x = x, y = y, width = width, height = height, gp = gp)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.31, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(axis.text.x = element_blank(),  axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y= "", title = "Top 5 Skills on LinkedIn for Data Scientists")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values=c("#caf0f8","#00b4d8","#03045e","#0077b6", "#90e0ef")) + annotation_custom(logo)
knitr::opts_chunk$set(eval = TRUE, message = FALSE, warning = FALSE)
library(readr)
library(dplyr)
library(tidyverse)
library(knitr)
library(magick)
library(here) # For making the script run without a wd
library(magrittr) # For piping the logo to the plot
library(gtable)
library(grid)
# Position the logo via rasterGrob.
get_png <-
function(filename,
x = unit(0.5, "npc"),
y = unit(0.5, "npc"),
width = NULL,
height = NULL,
gp = grid::gpar()) {
grid::rasterGrob(
png::readPNG(filename),
interpolate = TRUE,
x = x,
y = y,
width = width,
height = height,
gp = gp
)
}
width = 3
# Save the logo as a grob
logo <-
get_png(
here("linkedin_logo.png"),
x = unit(1.31, "npc") - unit(width / 2, "lines"),
y = unit(0, "lines"),
width = unit(width, "lines")
)
# Plot the Top 5 skills
top5_skills_plot <- function(x, width = 3) {
ggplot(top5_skills, aes(
x = reorder(skill, total),
y = total,
fill = skill
)) +
geom_col() +
coord_cartesian(clip = "off") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = total), vjust = -0.2) +
labs(x = "", y = "", title = "Top 5 Skills on LinkedIn for Data Scientists")
}
top5_skills_plot(top5_skills) + scale_fill_manual(values = c("#caf0f8", "#00b4d8", "#03045e", "#0077b6", "#90e0ef")) + annotation_custom(logo)
library(tidyverse)
library(rvest)
#|warning = FALSE
library(tidyverse)
library(rvest)
#|warning: FALSE
library(tidyverse)
library(rvest)
url <- "https://www.espn.com/nfl/superbowl/history/winners"
webpage <- read_html(url)
webpage
super_bowl_table <- webpage,'table')
super_bowl_table <- html_nodes(webpage,'table')
super_bowl_df <- html_table(super_bowl_table)[[1]]
head(super_bowl_df)
super_bowl_df <- super_bowl_df[-c(1,2),]
colnames(super_bowl_df) <- c("Super Bowl", "Date", "Venue", "Results")
head(super_bowl_df)
View(super_bowl_df)
super_bowl_df$Super_Bowl <- as.numeric(roman2int(super_bowl_df$Super_Bowl))
super_bowl_df$Super_Bowl <- roman2int(super_bowl_df$Super_Bowl))
super_bowl_df$Super_Bowl <- roman2int(super_bowl_df$Super_Bowl)
install.packages("gtools")
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
library(gtools)
super_bowl_df$Super_Bowl <- roman2int(super_bowl_df$Super_Bowl)
roman2int("MMXVI")
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
install.packages("gtools", dependencies = TRUE)
#| warning: FALSE
library(tidyverse)
library(rvest)
library(gtools)
